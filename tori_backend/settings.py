"""
Django settings for tori_backend project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from datetime import timedelta


AUTH_USER_MODEL = 'accounts.User'

import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# media 파일 저장 경로 (서버 내 실제 폴더 위치)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# media URL 경로 (브라우저에서 접근할 때 사용)
MEDIA_URL = '/media/'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# settings.py
from dotenv import load_dotenv
import os

load_dotenv()  # .env 파일 읽기



SECRET_KEY = os.getenv("SECRET_KEY")

if SECRET_KEY is None:
    raise ValueError("RECAPTCHA_SECRET_KEY is not set in environment")

GOOGLE_OAUTH2_CLIENT_ID = os.getenv("GOOGLE_OAUTH2_CLIENT_ID")

if GOOGLE_OAUTH2_CLIENT_ID is None:
    raise ValueError("GOOGLE_OAUTH2_CLIENT_ID is not set in environment")

GOOGLE_OAUTH2_CLIENT_SECRET = os.getenv("GOOGLE_OAUTH2_CLIENT_SECRET")

if GOOGLE_OAUTH2_CLIENT_SECRET is None:
    raise ValueError("GOOGLE_OAUTH2_CLIENT_SECRET is not set in environment")

RECAPTCHA_SECRET_KEY = os.getenv("RECAPTCHA_SECRET_KEY")

if RECAPTCHA_SECRET_KEY is None:
    raise ValueError("RECAPTCHA_SECRET_KEY is not set in environment")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 100,
                'retry_on_timeout': True,
                'decode_responses': False,  # Redis 바이트 처리용
            }
        }
    }
}

# Redis 설정
REDIS_MATCH_CONFIG = {
    'ONLINE_TTL': 30,      # 온라인 상태 TTL (초)
    'PROCESSING_TTL': 10,  # 처리 락 TTL (초)  
    'QUEUE_TTL': 300,      # 큐 데이터 TTL (초)
    'MATCH_TTL': 600,      # 매치 요청 TTL (초)
}

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    'corsheaders',
    "django.contrib.staticfiles",
    'accounts', 'call', 'docs', 'gem', 'history', 'match', 'users',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',

    
    # OAuth 관련 앱
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    
    # 사용할 Provider 예시: 구글, 카카오
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.kakao',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # 기본 로그인
    'allauth.account.auth_backends.AuthenticationBackend',  # OAuth 로그인
)

SITE_ID = 1

# 이메일 인증 없이 바로 로그인 허용
ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_EMAIL_REQUIRED = False
LOGIN_REDIRECT_URL = "http://localhost:51577"
LOGOUT_REDIRECT_URL = "/"


# settings.py
ASGI_APPLICATION = "tori_backend.routing.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}


CORS_ALLOW_ALL_ORIGINS = True



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    # 기타 설정들...
}



SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}

MIDDLEWARE = [
    # 여기에 추가
    "allauth.account.middleware.AccountMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "tori_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "tori_backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
